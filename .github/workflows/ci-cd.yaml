name: CI/CD # Tên workflow đã được cập nhật

on:
  push:
    branches:
      - main
      - dev
  pull_request: # Trigger cho Pull Request thông thường (chạy với quyền của PR)
    branches:
      - main
      - dev
  pull_request_target: # Trigger cho Pull Request (chạy với quyền của nhánh đích, cần cẩn trọng bảo mật)
    branches:
      - main
      - dev
  merge_group: # Trigger cho GitHub Merge Queue (nếu bạn sử dụng)
    branches:
      - main
      - dev

permissions:
  contents: write # Cần quyền này để workflow có thể commit và push thay đổi vào repo

jobs:
  # ---
  # Job kiểm tra chất lượng code cho Pull Request và Merge Group
  # ---
  intergration_check:
    name: Intergration Check
    runs-on: ubuntu-latest
    steps:
      - name: Setup CI Environment Variable
        run: export CI=true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        shell: bash
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Get yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Run nx lint for all projects
        run: ./node_modules/.bin/nx run-many --target=lint

      - name: Run nx lint for all projects
        run: ./node_modules/.bin/nx run-many --target=chart-lint

      - name: Run nx test for all projects
        run: ./node_modules/.bin/nx run-many --target=test

      - name: Run nx build for all projects
        run: ./node_modules/.bin/nx run-many --target=build

      - name: Run nx containerize for all projects (dry run build container image)
        run: ./node_modules/.bin/nx run-many --target=containerize

      - uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install playwright deps
        run: ./node_modules/.bin/playwright install --with-deps

      - name: Deploy local environment
        run: docker compose up -d --wait

      - name: E2E test
        run: ./node_modules/.bin/nx run-many --target=automate-test

  release:
    name: Release
    needs: [intergration_check]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Setup CI Environment Variable
        run: export CI=true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        shell: bash
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Get yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_BOT_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
            image=moby/buildkit:master

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          git config user.name "EcomaIO (Bot)"
          git config user.email "adm.ecoma@gmail.com"
          /usr/bin/git config --global --add url."https://${{ secrets.GH_BOT_TOKEN }}:x-oauth-basic@github".insteadOf ssh://git@github
          /usr/bin/git config --global --add url."https://${{ secrets.GH_BOT_TOKEN }}:x-oauth-basic@github".insteadOf https://github
          /usr/bin/git config --global --add url."https://${{ secrets.GH_BOT_TOKEN }}:x-oauth-basic@github".insteadOf git@github
          ./node_modules/.bin/release-it -c .github/release-it.json --ci
